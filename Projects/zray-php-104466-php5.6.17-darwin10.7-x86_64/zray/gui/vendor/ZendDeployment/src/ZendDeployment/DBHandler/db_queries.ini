
insert_package="insert into deployment_packages (package_id, path, eula, readme, logo, package_descriptor, name, version, monitor_rules, pagecache_rules) values (NULL, :path, :eula, :readme, :logo, :package_descriptor, :name, :version, :monitor_rules, :pagecache_rules)"

update_package="update deployment_packages set version = :version where package_id = :package_id"

insert_package_data="insert into deployment_package_data (package_data_id, package_id, data) values (NULL, :package_id, :data)"

get_package_meta_data="select deployment_packages.eula as eula, deployment_packages.name as name, deployment_packages.version as version, deployment_packages.logo as logo, deployment_packages.package_descriptor as package_descriptor, deployment_packages.monitor_rules as monitor_rules, deployment_packages.pagecache_rules as pagecache_rules from deployment_packages, deployment_tasks_descriptors where deployment_packages.package_id = deployment_tasks_descriptors.package_id and deployment_packages.package_id = :package_id"

insert_task_descriptor="insert into deployment_tasks_descriptors (task_descriptor_id, base_url, user_params, zend_params, package_id, run_once_node_id, creation_time, status) values (NULL, :base_url, :user_params, :zend_params, :package_id, :run_once_node_id, :creation_time, :status)"

update_task_descriptor="update deployment_tasks_descriptors set user_params = :user_params, zend_params = :zend_params where task_descriptor_id = :task_descriptor_id"

update_pending_task_descriptor="update deployment_tasks_descriptors SET user_params = :user_params, zend_params = :zend_params WHERE base_url = :base_url AND status = :status"

activate_pending_task_descriptor="update deployment_tasks_descriptors SET run_once_node_id = :run_once_node_id, status = :newstatus, creation_time = :creation_time WHERE base_url = :base_url AND status = :oldstatus"

insert_task="insert into deployment_tasks (task_id, group_id, node_id, type, task_descriptor_id, audit_id) values (NULL, :group_id, :node_id, :type, :task_descriptor_id, :audit_id)"

insert_sequence="insert into deployment_sequencer (id) VALUES (NULL)"

insert_application="INSERT INTO deployment_apps (app_id, base_url, user_app_name, is_defined, vhost_id) VALUES (NULL, :base_url, :user_app_name, :is_defined, :vhost_id)"

insert_application_version="INSERT INTO deployment_apps_versions (app_version_id, app_id, task_descriptor_id, health_check_path, last_used, creation_time) VALUES (NULL, :app_id, :task_descriptor_id, :health_check_path, :last_used, :creation_time)"

insert_application_status="INSERT INTO deployment_app_status (app_status_id, app_version_id, status, node_id, last_updated, install_path, health_status, next_status) VALUES (NULL, :app_version_id, :status, :node_id, :last_updated, :install_path, :health_status, -1)"

insert_library="INSERT INTO deployment_libs (lib_id, is_defined) VALUES (NULL, :is_defined)"

insert_library_version="INSERT INTO deployment_libs_versions (lib_version_id, lib_id, task_descriptor_id, creation_time, is_default) VALUES (NULL, :lib_id, :task_descriptor_id, :creation_time, :is_default)"

insert_library_status="INSERT INTO deployment_libs_status (lib_status_id, lib_version_id, status, node_id, last_updated, install_path) VALUES (NULL, :lib_version_id, :status, :node_id, :last_updated, :install_path)"

get_libraries_status = "SELECT deployment_libs.*, deployment_libs_versions.*, deployment_libs_status.*, deployment_packages.* from deployment_libs_status left join deployment_libs_versions on (deployment_libs_status.lib_version_id = deployment_libs_versions.lib_version_id) left join deployment_libs on (deployment_libs_versions.lib_id = deployment_libs.lib_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_libs_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id)  "

update_library_status = "UPDATE deployment_libs_status SET status = :status where exists (select deployment_libs_versions.lib_id from deployment_libs_versions where deployment_libs_versions.lib_id = :lib_id and deployment_libs_status.lib_version_id = deployment_libs_versions.lib_version_id)"  

update_library_version_status = "UPDATE deployment_libs_status SET status = :status where exists (select deployment_libs_versions.lib_id from deployment_libs_versions where deployment_libs_versions.lib_version_id = :lib_version_id and deployment_libs_status.lib_version_id = deployment_libs_versions.lib_version_id)"

get_library_id_by_name = "SELECT deployment_libs.lib_id from deployment_libs_status left join deployment_libs_versions on (deployment_libs_status.lib_version_id = deployment_libs_versions.lib_version_id) left join deployment_libs on (deployment_libs_versions.lib_id = deployment_libs.lib_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_libs_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id) where deployment_packages.name = :name limit 1"

is_library_version_exists = "SELECT deployment_libs.lib_id from deployment_libs_status left join deployment_libs_versions on (deployment_libs_status.lib_version_id = deployment_libs_versions.lib_version_id) left join deployment_libs on (deployment_libs_versions.lib_id = deployment_libs.lib_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_libs_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id) where deployment_packages.name = :name and deployment_packages.version = :version limit 1"


get_plugins_status = "SELECT deployment_plugins.*, deployment_plugins_versions.*, deployment_plugins_status.*, deployment_packages.* from deployment_plugins_status left join deployment_plugins_versions on (deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id) left join deployment_plugins on (deployment_plugins_versions.plugin_id = deployment_plugins.plugin_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_plugins_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id)  where deployment_plugins_status.next_status = -1 order by deployment_packages.name"

get_task_descriptors_by_plugin_version_id="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params FROM deployment_plugins_versions LEFT JOIN deployment_tasks_descriptors on (deployment_plugins_versions.task_descriptor_id = deployment_tasks_descriptors.task_descriptor_id) WHERE deployment_plugins_versions.plugin_version_id = :plugin_version_id"

update_plugin_version_status = "UPDATE deployment_plugins_status SET status = :status where exists (select deployment_plugins_versions.plugin_id from deployment_plugins_versions where deployment_plugins_versions.plugin_version_id = :plugin_version_id and deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id)"

get_task_descriptors_by_plugin_id="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params, deployment_plugins_versions.plugin_version_id FROM deployment_plugins_versions LEFT JOIN deployment_tasks_descriptors on (deployment_plugins_versions.task_descriptor_id = deployment_tasks_descriptors.task_descriptor_id) WHERE deployment_plugins_versions.plugin_id = :plugin_id"

is_plugin_version_exists = "SELECT deployment_plugins.plugin_id from deployment_plugins_status left join deployment_plugins_versions on (deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id) left join deployment_plugins on (deployment_plugins_versions.plugin_id = deployment_plugins.plugin_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_plugins_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id) where deployment_packages.name = :name and deployment_packages.version = :version limit 1"

is_plugin_exists = "SELECT deployment_plugins.plugin_id from deployment_plugins_status left join deployment_plugins_versions on (deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id) left join deployment_plugins on (deployment_plugins_versions.plugin_id = deployment_plugins.plugin_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_plugins_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id) where deployment_packages.name = :name limit 1"

get_plugin_id_by_name = "SELECT deployment_plugins.plugin_id from deployment_plugins_status left join deployment_plugins_versions on (deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id) left join deployment_plugins on (deployment_plugins_versions.plugin_id = deployment_plugins.plugin_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_plugins_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id) where deployment_packages.name = :name limit 1"

get_plugin_by_name = "SELECT * from deployment_plugins_status left join deployment_plugins_versions on (deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id) left join deployment_plugins on (deployment_plugins_versions.plugin_id = deployment_plugins.plugin_id) left join deployment_tasks_descriptors on (deployment_tasks_descriptors.task_descriptor_id = deployment_plugins_versions.task_descriptor_id) left join deployment_packages on (deployment_packages.package_id =  deployment_tasks_descriptors.package_id) where deployment_packages.name = :name limit 1"

insert_plugin="INSERT INTO deployment_plugins (plugin_id, unique_plugin_id) VALUES (NULL, NULL)"

reset_plugin_default = "UPDATE deployment_plugins_versions set is_default = 0 WHERE plugin_id = :plugin_id"

insert_plugin_version="INSERT INTO deployment_plugins_versions (plugin_version_id, plugin_id, task_descriptor_id, creation_time, last_used) VALUES (NULL, :plugin_id, :task_descriptor_id, :creation_time, :creation_time)"

insert_plugin_status="INSERT INTO deployment_plugins_status (plugin_status_id, plugin_version_id, status, node_id, last_updated, install_path) VALUES (NULL, :plugin_version_id, :status, :node_id, :last_updated, :install_path)"

get_plugin_id_by_plugin_version = "SELECT plugin_id from deployment_plugins_versions where plugin_version_id = :plugin_version_id" 

set_plugin_default_by_plugin_version = "UPDATE deployment_plugins_versions set is_default = 1 WHERE plugin_version_id = :plugin_version_id"

get_all_plugins_info="SELECT deployment_plugins.plugin_id, deployment_plugins_status.status, deployment_packages.name FROM deployment_plugins LEFT JOIN deployment_plugins_versions ON (deployment_plugins_versions.plugin_id = deployment_plugins.plugin_id) LEFT JOIN deployment_plugins_status ON (deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id) LEFT JOIN deployment_tasks_descriptors ON (deployment_tasks_descriptors.task_descriptor_id = deployment_plugins_versions.task_descriptor_id) LEFT JOIN deployment_packages ON (deployment_packages.package_id = deployment_tasks_descriptors.package_id) WHERE (deployment_tasks_descriptors.base_url IS NULL or deployment_tasks_descriptors.base_url='') and deployment_plugins_status.node_id IN (-1, :node_ids) and deployment_plugins_status.next_status = -1 GROUP BY deployment_plugins.plugin_id "

get_pending_deployment_by_plugin_name="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params, deployment_tasks_descriptors.base_url as base_url, deployment_packages.name as name FROM deployment_tasks_descriptors JOIN deployment_packages ON (deployment_packages.package_id = deployment_tasks_descriptors.package_id) WHERE  deployment_tasks_descriptors.status = :status AND deployment_packages.name = :name  ORDER BY deployment_tasks_descriptors.task_descriptor_id  DESC LIMIT 1"

delete_pending_plugin_task_by_name="DELETE FROM deployment_tasks_descriptors WHERE status = :status AND package_id in (SELECT package_id FROM deployment_packages WHERE name = :name) AND task_descriptor_id NOT IN (select task_descriptor_id from deployment_plugins_versions)"

get_plugin_version_by_plugin_id="SELECT * from deployment_plugins_versions WHERE plugin_id = :plugin_id ORDER BY last_used DESC"

activate_pending_plugin_task_descriptor="update deployment_tasks_descriptors SET run_once_node_id = :run_once_node_id, status = :newstatus, creation_time = :creation_time WHERE task_descriptor_id = :taskid AND status = :oldstatus"

get_package_meta_data="select deployment_packages.eula as eula, deployment_packages.name as name, deployment_packages.version as version, deployment_packages.logo as logo, deployment_packages.package_descriptor as package_descriptor, deployment_packages.monitor_rules as monitor_rules, deployment_packages.pagecache_rules as pagecache_rules from deployment_packages, deployment_tasks_descriptors where deployment_packages.package_id = deployment_tasks_descriptors.package_id and deployment_packages.package_id = :package_id"

update_plugin_status = "UPDATE deployment_plugins_status SET status = :status where exists (select deployment_plugins_versions.plugin_id from deployment_plugins_versions where deployment_plugins_versions.plugin_id = :plugin_id and deployment_plugins_status.plugin_version_id = deployment_plugins_versions.plugin_version_id)"  

update_pending_plugin_task_descriptor="update deployment_tasks_descriptors SET user_params = :user_params, zend_params = :zend_params WHERE base_url = :base_url AND status = :status"

update_plugin_status_next_status = "UPDATE deployment_plugins_status SET next_status = :next_status WHERE plugin_status_id = :plugin_status_id" 

get_plugin_active_status="SELECT * FROM deployment_plugins_status JOIN deployment_plugins_versions ON (deployment_plugins_versions.plugin_version_id = deployment_plugins_status.plugin_version_id) WHERE deployment_plugins_status.node_id = :node_id AND deployment_plugins_versions.plugin_id = :plugin_id AND deployment_plugins_status.next_status = -1 ORDER BY deployment_plugins_status.plugin_status_id ASC LIMIT 1"

find_plugin_for_node="select * from deployment_plugins_status WHERE node_id = :node_id AND plugin_version_id = :plugin_version_id"

get_total_tasks="SELECT count(1) AS total_rows FROM deployment_tasks"


update_application_status_next_status = "UPDATE deployment_app_status SET next_status = :next_status WHERE app_status_id = :app_status_id" 

get_application_active_status="SELECT * FROM deployment_app_status JOIN deployment_apps_versions ON (deployment_apps_versions.app_version_id = deployment_app_status.app_version_id) WHERE deployment_app_status.node_id = :node_id AND deployment_apps_versions.app_id = :app_id AND deployment_app_status.next_status = -1 LIMIT 1"

get_status_by_next_status="SELECT * FROM deployment_app_status JOIN deployment_apps_versions ON (deployment_apps_versions.app_version_id = deployment_app_status.app_version_id) WHERE deployment_app_status.next_status = :next_status"

get_application_version_by_app_id="SELECT * from deployment_apps_versions WHERE app_id = :app_id ORDER BY last_used DESC"

get_applications="SELECT deployment_apps.vhost_id, deployment_app_status.app_status_id as app_status_id, deployment_app_status.next_status as next_status, deployment_app_status.node_id as node_id, deployment_app_status.status as status, deployment_apps_versions.app_version_id as app_version_id, deployment_apps_versions.app_id as app_id, deployment_apps_versions.last_used as last_used, deployment_apps.base_url as base_url, deployment_packages.name as name, last_message as last_message, deployment_packages.version as version, health_status as health_status, health_message as health_message, deployment_tasks_descriptors.run_once_node_id as run_once_node_id, deployment_tasks_descriptors.creation_time as creation_time, deployment_apps.user_app_name as user_app_name, install_path as install_path, deployment_apps.is_defined as is_defined FROM deployment_app_status LEFT JOIN deployment_apps_versions ON (deployment_app_status.app_version_id = deployment_apps_versions.app_version_id) LEFT JOIN deployment_apps ON (deployment_apps.app_id = deployment_apps_versions.app_id) LEFT JOIN deployment_tasks_descriptors ON (deployment_apps_versions.task_descriptor_id = deployment_tasks_descriptors.task_descriptor_id) LEFT JOIN deployment_packages on (deployment_tasks_descriptors.package_id = deployment_packages.package_id) WHERE deployment_app_status.hidden != 1 ORDER BY deployment_apps.user_app_name ASC, deployment_app_status.app_status_id ASC, deployment_app_status.node_id ASC"

get_applications_by_ids="SELECT deployment_app_status.app_status_id as app_status_id, deployment_app_status.next_status as next_status, deployment_app_status.node_id as node_id, deployment_app_status.status as status, deployment_apps_versions.app_version_id as app_version_id, deployment_apps_versions.app_id as app_id, deployment_apps_versions.last_used as last_used, deployment_apps.base_url as base_url, deployment_packages.name as name, last_message as last_message, deployment_packages.version as version, health_status as health_status, health_message as health_message, deployment_tasks_descriptors.run_once_node_id as run_once_node_id, deployment_tasks_descriptors.creation_time as creation_time, deployment_apps.user_app_name as user_app_name, install_path as install_path, deployment_apps.is_defined as is_defined FROM deployment_app_status LEFT JOIN deployment_apps_versions ON (deployment_app_status.app_version_id = deployment_apps_versions.app_version_id) LEFT JOIN deployment_apps ON (deployment_apps.app_id = deployment_apps_versions.app_id) LEFT JOIN deployment_tasks_descriptors ON (deployment_apps_versions.task_descriptor_id = deployment_tasks_descriptors.task_descriptor_id) LEFT JOIN deployment_packages on (deployment_tasks_descriptors.package_id = deployment_packages.package_id) WHERE deployment_apps.app_id in (:app_ids) AND deployment_app_status.hidden != 1 ORDER BY deployment_apps.user_app_name ASC, deployment_app_status.app_status_id ASC, deployment_app_status.node_id ASC"

get_all_applications_info="SELECT deployment_apps.app_id, deployment_apps.base_url, deployment_apps.user_app_name,deployment_app_status.status, deployment_app_status.health_status, deployment_packages.name, deployment_apps.is_defined FROM deployment_apps LEFT JOIN deployment_apps_versions ON (deployment_apps_versions.app_id = deployment_apps.app_id) LEFT JOIN deployment_app_status ON (deployment_app_status.app_version_id = deployment_apps_versions.app_version_id) LEFT JOIN deployment_tasks_descriptors ON (deployment_tasks_descriptors.task_descriptor_id = deployment_apps_versions.task_descriptor_id) LEFT JOIN deployment_packages ON (deployment_packages.package_id = deployment_tasks_descriptors.package_id) WHERE deployment_app_status.node_id IN (-1, :node_ids) and deployment_app_status.next_status = -1 GROUP BY deployment_apps.app_id ORDER BY deployment_apps.user_app_name ASC"

get_task_descriptor_by_application_id="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params FROM deployment_tasks_descriptors JOIN deployment_apps_versions ON (deployment_tasks_descriptors.task_descriptor_id = deployment_apps_versions.task_descriptor_id) WHERE deployment_apps_versions.app_id = :app_id ORDER BY deployment_apps_versions.last_used DESC LIMIT 1"

get_task_descriptor_by_application_status_id="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params FROM deployment_tasks_descriptors JOIN deployment_apps_versions ON (deployment_tasks_descriptors.task_descriptor_id = deployment_apps_versions.task_descriptor_id) JOIN deployment_app_status ON (deployment_app_status.app_version_id = deployment_apps_versions.app_version_id) WHERE deployment_app_status.app_status_id = :app_status_id LIMIT 1"

get_task_descriptors_by_library_id="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params FROM deployment_libs_versions LEFT JOIN deployment_tasks_descriptors on (deployment_libs_versions.task_descriptor_id = deployment_tasks_descriptors.task_descriptor_id) WHERE deployment_libs_versions.lib_id = :lib_id"

get_task_descriptors_by_library_version_id="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params FROM deployment_libs_versions LEFT JOIN deployment_tasks_descriptors on (deployment_libs_versions.task_descriptor_id = deployment_tasks_descriptors.task_descriptor_id) WHERE deployment_libs_versions.lib_version_id = :lib_version_id"

get_pending_deployments="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params, deployment_tasks_descriptors.base_url as base_url, deployment_packages.name as name FROM deployment_tasks_descriptors JOIN deployment_packages ON (deployment_packages.package_id = deployment_tasks_descriptors.package_id) WHERE  deployment_tasks_descriptors.status = :status"

get_pending_deployment_by_base_url="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params, deployment_tasks_descriptors.base_url as base_url FROM deployment_tasks_descriptors JOIN deployment_packages ON (deployment_packages.package_id = deployment_tasks_descriptors.package_id) WHERE  deployment_tasks_descriptors.status = :status AND deployment_tasks_descriptors.base_url = :base_url LIMIT 1"

get_pending_deployment_by_task_id="SELECT deployment_tasks_descriptors.task_descriptor_id as task_descriptor_id, deployment_tasks_descriptors.package_id as package_id, deployment_tasks_descriptors.user_params as user_params, deployment_tasks_descriptors.zend_params, deployment_tasks_descriptors.base_url as base_url FROM deployment_tasks_descriptors JOIN deployment_packages ON (deployment_packages.package_id = deployment_tasks_descriptors.package_id) WHERE  deployment_tasks_descriptors.status = :status AND deployment_tasks_descriptors.task_descriptor_id = :task_descriptor_id LIMIT 1"

get_base_url_by_app_id="SELECT base_url from deployment_apps where app_id = :app_id"

get_app_id_by_base_url="SELECT app_id from deployment_apps where base_url = :base_url"

delete_pending_task_by_base_url="DELETE FROM deployment_tasks_descriptors WHERE deployment_tasks_descriptors.base_url = :base_url AND deployment_tasks_descriptors.status = :status AND deployment_tasks_descriptors.task_descriptor_id NOT IN (select task_descriptor_id from deployment_apps_versions)"

get_node_status = "SELECT status, last_updated FROM deployment_nodes_status WHERE node_id = :node_id"

get_virtual_hosts = "SELECT name, node_id, path FROM deployment_vhosts"

delete_task = "DELETE FROM deployment_tasks where task_descriptor_id = :task_descriptor_id and node_id IN (:node_ids)"

delete_last_app_status = "DELETE FROM deployment_app_status WHERE app_id = :app_id and node_id IN (:node_ids) and next_status = -1"

delete_app_status = "DELETE FROM deployment_app_status WHERE app_status_id=:app_status_id"

reactivate_app_status = "UPDATE deployment_app_status SET next_status = -1 WHERE next_status = :next_status"

delete_obsolete_apps_version = "DELETE FROM deployment_apps_versions WHERE app_version_id NOT IN (select app_version_id FROM deployment_app_status)"

delete_obsolete_apps = "DELETE FROM deployment_apps WHERE app_id NOT IN (select app_id FROM deployment_apps_versions)" 

delete_obsolete_packages = "DELETE FROM deployment_packages WHERE package_id NOT IN (SELECT deployment_tasks_descriptors.package_id FROM deployment_tasks_descriptors)"

delete_obsolete_descriptors = "DELETE FROM deployment_tasks_descriptors WHERE task_descriptor_id NOT IN (SELECT task_descriptor_id FROM deployment_tasks) AND task_descriptor_id NOT IN (SELECT task_descriptor_id FROM deployment_apps_versions) AND task_descriptor_id NOT IN (SELECT task_descriptor_id FROM deployment_libs_versions) AND deployment_tasks_descriptors.status = :status"

delete_obsolete_apps_versions = "DELETE FROM deployment_apps_versions WHERE app_version_id NOT IN (SELECT app_version_id FROM deployment_app_status)"

delete_obsolete_app_statuses = "DELETE FROM deployment_app_status WHERE app_id NOT IN (SELECT app_id FROM deployment_apps_versions)"
 
delete_obsolete_package_data = "DELETE FROM deployment_package_data WHERE package_id NOT IN (SELECT deployment_tasks_descriptors.package_id FROM deployment_tasks_descriptors)"

purge_applications = "DELETE FROM deployment_app_status WHERE node_id in (:node_ids)"

fail_timedout_tasks = "UPDATE deployment_app_status SET status = :new_status WHERE status = :old_status and last_updated < :time_limit"

set_health_check_path = "UPDATE deployment_apps_versions SET health_check_path=:health_check_path WHERE app_id=:app_id"

update_app_version_last_used = "UPDATE deployment_apps_versions SET last_used = :last_used where app_version_id = :app_version_id"

hide_app_status = "UPDATE deployment_app_status SET hidden = 1 WHERE node_id IN (:node_ids) AND deployment_app_status.app_version_id IN (SELECT app_version_id from deployment_apps_versions WHERE deployment_apps_versions.app_id = :app_id)"

get_integration_candidates = "SELECT deployment_app_status.app_status_id as app_status_id, deployment_app_status.install_path as install_path, deployment_apps.app_id, deployment_apps_versions.task_descriptor_id, deployment_apps_versions.app_version_id, deployment_apps.user_app_name as name, deployment_apps.base_url, deployment_apps_versions.health_check_path FROM deployment_app_status LEFT JOIN deployment_apps_versions on (deployment_app_status.app_version_id = deployment_apps_versions.app_version_id) LEFT JOIN deployment_apps ON (deployment_apps.app_id = deployment_apps_versions.app_id) WHERE deployment_apps.is_defined = 1 AND deployment_app_status.status = :status group by deployment_apps.app_id order by deployment_apps.base_url ASC"

update_app_health_check = "UPDATE deployment_apps_versions SET health_check_path = :health_check_path WHERE app_id = :app_id"

update_app = "UPDATE deployment_apps SET base_url = :base_url, user_app_name = :user_app_name WHERE app_id = :app_id"

update_package_version_by_app_id = "UPDATE deployment_packages SET version = :version WHERE package_id = (select package_id from deployment_tasks_descriptors where task_descriptor_id = (select task_descriptor_id from deployment_apps_versions where app_id = :app_id))"

update_package_logo_by_app_id = "UPDATE deployment_packages SET logo = :logo WHERE package_id = (select package_id from deployment_tasks_descriptors where task_descriptor_id = (select task_descriptor_id from deployment_apps_versions where app_id = :app_id))"

update_app_status = "UPDATE deployment_app_status set status = :status WHERE app_status_id = :app_status_id"

get_app_details = "SELECT * FROM deployment_apps where app_id = :app_id"

delete_app_version_statuses = "DELETE FROM deployment_app_status where app_version_id = :app_version_id"

get_deployed_app_names = "SELECT deployment_apps.user_app_name from deployment_app_status LEFT JOIN deployment_apps_versions on (deployment_app_status.app_version_id = deployment_apps_versions.app_version_id) LEFT JOIN deployment_apps ON (deployment_apps.app_id = deployment_apps_versions.app_id) where node_id != -1 and deployment_app_status.status != :status"  

get_deployed_base_urls = "SELECT distinct deployment_apps.base_url from deployment_app_status LEFT JOIN deployment_apps_versions on (deployment_app_status.app_version_id = deployment_apps_versions.app_version_id) LEFT JOIN deployment_apps ON (deployment_apps.app_id = deployment_apps_versions.app_id) where node_id != -1 and deployment_app_status.status != :status"

get_default_server_name = "SELECT name from deployment_vhosts where name like '%default-server%'"

update_run_once_node_id = "update deployment_tasks_descriptors set run_once_node_id = :new_node_id where run_once_node_id = :orig_node_id"

change_defined_app_status = "update deployment_app_status set status = :new_status where deployment_app_status.app_version_id = (select deployment_apps_versions.app_version_id from deployment_apps_versions where deployment_apps_versions.app_id = :app_id)"

reset_library_default = "UPDATE deployment_libs_versions set is_default = 0 WHERE lib_id = :lib_id"

get_library_id_by_library_version = "SELECT lib_id from deployment_libs_versions where lib_version_id = :lib_version_id" 

set_library_default_by_lib_version = "UPDATE deployment_libs_versions set is_default = 1 WHERE lib_version_id = :lib_version_id"

insert_new_download_status = "INSERT INTO deployment_downloads (id, app_id, lib_id, url, extra_data, path, status, message, total, downloaded, start_time) VALUES (NULL, :app_id, :lib_id, :url, :extra_data, :path, :status, :message, :total, :downloaded, :start_time)"

